language: python

python:
  - 3.6

services:
  - docker

before_install:
  - export PYTHONPATH=$HOME/builds/jay-johnson/antinex-client
  - export PIP_USE_MIRRORS=true
  - export USE_VERSION=$(cat setup.py | grep " version=" | sed -e 's/"/ /g' | awk '{print $2}')
  - export REPO=jayjohnson/antinex-client
  - echo "Building Docker with tag=${USE_VERSION}"
  - echo ""
  - echo "Testing Docker Hub credentials username=${DOCKER_USERNAME}"
  - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  - echo "Docker Hub credentials are working"

install:
  - pip install -e .

script:
  - echo "Running Lint Tests"
  - flake8
  - pycodestyle
  - echo "Running Unit Tests"
  - python setup.py test

after_success:
  - export USE_VERSION=$(cat setup.py | grep " version=" | sed -e 's/"/ /g' | awk '{print $2}')
  - echo "Test Success - Branch=${TRAVIS_BRANCH} Version=${USE_VERSION} Pull Request=${TRAVIS_PULL_REQUEST} Tag=${TRAVIS_TAG}"
  - if [[ "$TRAVIS_BRANCH" == "master" ]]; then echo -e "Push Container to Docker Hub"; fi
  - echo "Logging into Docker Hub"
  - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - echo "starting: docker build -f Dockerfile -t ${REPO} ."
  - docker build -f Dockerfile -t $REPO .
  - echo "docker tag ${REPO} ${REPO}:${USE_VERSION}"
  - docker tag $REPO $REPO:$USE_VERSION
  - echo "docker push ${REPO}"
  - docker push $REPO:latest
  - echo "docker push ${REPO}:${USE_VERSION}"
  - docker push $REPO:$USE_VERSION
